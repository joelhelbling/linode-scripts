#!/bin/bash

if [ "$1" == "" ]; then
  echo "You must provide the name of a linode you wish to rebuild"
  exit 1
fi

generate_password() {
  echo "`openssl rand -base64 16 | tr -dc a-zA-Z0-9 | tr 'AEIOU' 'aeiou' | tr '0-4' '.' | tr '5-9' '-'`"
}

LABEL=$1
SERVER_HOSTNAME=$LABEL
DISTRIBUTION="Ubuntu 16.04 LTS"
STACKSCRIPT_NAME="linode_initial_setup"
UDF_JSON=./config/udf.json

if [ ! -f "$UDF_JSON" ]; then
  cat <<EOF
You need to create a json file at $UDF_JSON
You can begin by making a copy of config/udf.example.json
EOF
  exit 1
fi

IP_ADDRESS=`linode linode show $SERVER_HOSTNAME | grep ips: | awk '/\s*/ {print $2}'`
STACKSCRIPT_ID=`linode stackscript show $STACKSCRIPT_NAME | grep id: | awk '/\s*/ {print $2}'`
ROOT_PASSWORD=`generate_password`
USER_PASSWORD=`generate_password`
JSON=`jq "setpath([\"PASSWORD\"]; \"$USER_PASSWORD\")" $UDF_JSON`
JSON=`echo $JSON | jq "setpath([\"SERVER_HOSTNAME\"]; \"$SERVER_HOSTNAME\")"`
JSON_MIN=`echo $JSON | jq -c .`

cat <<EOF
running on $LABEL ($IP_ADDRESS) with this json:
$JSON"

EOF

if [ -z "$DRY_RUN" ]; then
  linode rebuild \
    --label "$LABEL" \
    --distribution "$DISTRIBUTION" \
    --password "$ROOT_PASSWORD" \
    --stackscript "$STACKSCRIPT_ID" \
    --stackscriptjson $JSON_MIN

  if [ ! -z "$IP_ADDRESS" ]; then
    KNOWN_HOSTS=`grep -v $IP_ADDRESS ~/.ssh/known_hosts`
    echo $KNOWN_HOSTS > ~/.ssh/known_hosts
  fi
fi

cat <<EOF
Root password: $ROOT_PASSWORD
User password: $USER_PASSWORD
EOF
